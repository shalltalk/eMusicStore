<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

    <var name="order" class="com.emusicstore.model.CustomerOrder" />

    <!--cartDaoImpl bean is defined in spring container, then invoke validate method to return a cartId-->
    <!--The cartId in method createOrder in OrderController.java will be passed to the validate method here.-->
    <action-state id="addCartToOrder">
        <evaluate expression="cartDaoImpl.validate(requestParameters.cartId)" result="order.cart" />
        <!--if there is an IOException, go to InvalidCartWarning. Else go to collectCustomerInfo-->
        <transition to="invalidCartWarning" on-exception="java.io.IOException" />
        <transition to="collectCustomerInfo" />
    </action-state>

    <!--if the condition is customerInfoCollected, go to collectShippingDetail (next button).
        If the condition is backToCollectCustomerInfo, go to collectCustomerInfo (back button). -->
    <view-state id="collectCustomerInfo" view="collectCustomerInfo.jsp" model="order" >
        <transition on="customerInfoCollected" to="collectShippingDetail" />
    </view-state>

    <view-state id="collectShippingDetail" view="collectShippingDetail.jsp" model="order" >
        <transition on="shippingDetailCollected" to="orderConfirmation" />
        <transition on="backToCollectCustomerInfo" to="collectCustomerInfo" />
    </view-state>

    <!--view without view name, it is by default the id.jsp -->
    <view-state id="orderConfirmation">
        <transition on="orderConfirmed" to="processOrder" />
        <transition on="backToCollectShippingDetail" to="collectShippingDetail" />
    </view-state>

    <action-state id="processOrder">
        <evaluate expression="cartItemDaoImpl.removeAllCartItems(order.cart)" />
        <transition to="thankCustomer" />
    </action-state>

    <view-state id="thankCustomer" model="order" >
        <transition to="endState" />
    </view-state>

    <end-state id="endState" />

    <view-state id="invalidCartWarning">
        <transition to="endState" />
    </view-state>
    
    <end-state id="cancelCheckout" view="checkOutCancelled.jsp" />

    <global-transitions>
        <transition on="cancel" to="cancelCheckout" />
    </global-transitions>

</flow>